@model IEnumerable<BookingServices.Models.ServiceModel>

@{
    ViewData["Title"] = "Services";
    Layout = ViewBag.isProvider ? "~/Views/Shared/_LayoutProvider.cshtml" : "~/Views/Shared/_LayoutAdmin.cshtml";
}
<link rel="stylesheet" href="~/css/StyleCustom/StyleList.css" />
<h1 class="text-center head-color">Services</h1>

@if (ViewBag.isProvider)
{
    <p>
        <a asp-action="Create" class="btn btn-outline-primary">Create New</a>
    </p>
}

<!-- Search Input (Hidden) -->
<div class="mb-3 d-none">
    <input type="text" id="searchInput" placeholder="Search by service name" class="form-control" aria-label="Search services" />
</div>

<!-- Filters -->
<div class="row mb-3">
    <!-- Location Filter -->
    <div class="col-md-6 mb-3">
        <label for="locationSelect" class="form-label">Location</label>
        <select id="locationSelect" class="form-select">
            <option value="">All Locations</option>
            @foreach (var location in ViewBag.Locations as List<string>)
            {
                <option value="@location">@location</option>
            }
        </select>
    </div>

    <!-- Category Filter -->
    <div class="col-md-6 mb-3">
        <label for="categorySelect" class="form-label">Category</label>
        <select id="categorySelect" class="form-select">
            <option value="">All Categories</option>
            @foreach (var category in ViewBag.Categories as List<string>)
            {
                <option value="@category">@category</option>
            }
        </select>
    </div>
</div>

<!-- Quantity Filters -->
<div class="row mb-3">
    <div class="col-md-6 mb-3">
        <label for="minQuantityRange" class="form-label">Min Quantity: <span id="minQuantityLabel">0</span></label>
        <input type="range" id="minQuantityRange" class="form-range" min="0" max="100" step="1" value="0" oninput="updateQuantityLabel()" aria-label="Minimum Quantity" />
    </div>
    <div class="col-md-6 mb-3">
        <label for="maxQuantityRange" class="form-label">Max Quantity: <span id="maxQuantityLabel">100</span></label>
        <input type="range" id="maxQuantityRange" class="form-range" min="0" max="100" step="1" value="100" oninput="updateQuantityLabel()" aria-label="Maximum Quantity" />
    </div>
</div>

<!-- Modal for Confirmation -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Confirm Action</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to request to make this service online?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmAction">Yes, Proceed</button>
            </div>
        </div>
    </div>
</div>

<!-- Services Table -->
<div class="table-responsive">
    <table class="table table-hover" id="myTable">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Name)</th>
                <th>@Html.DisplayNameFor(model => model.Location)</th>
                <th>@Html.DisplayNameFor(model => model.StartTime)</th>
                <th>@Html.DisplayNameFor(model => model.EndTime)</th>
                <th>@Html.DisplayNameFor(model => model.Quantity)</th>
                <th>@Html.DisplayNameFor(model => model.InitialPaymentPercentage)</th>
                @if (ViewBag.isProvider)
                {
                    <th>@Html.DisplayNameFor(model => model.IsOnlineOrOffline)</th>
                }
                else
                {
                    <th></th> <!-- Empty header to maintain column count -->
                }
                <th>@Html.DisplayNameFor(model => model.CategoryName)</th>
                <th>@Html.DisplayNameFor(model => model.ServicePrice)</th>
                @if (!ViewBag.isProvider)
                {
                    <th>@Html.DisplayNameFor(model => model.ServiceProviderName)</th>
                }
                else
                {
                    <th></th> <!-- Empty header to maintain column count -->
                }
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Location)</td>
                    <td>@Html.DisplayFor(modelItem => item.StartTime):00</td>
                    <td>@Html.DisplayFor(modelItem => item.EndTime):00</td>
                    <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                    <td>@Html.DisplayFor(modelItem => item.InitialPaymentPercentage) %</td>

                    @if (ViewBag.isProvider)
                    {
                        <td class="status-column">
                            @if (!item.IsOnlineOrOffline && !item.IsRequestedOrNot)
                            {
                                <a href="javascript:void(0);"
                                   class="btn btn-outline-secondary ps-3 pe-3 make-service-online"
                                   data-service-id="@item.ServiceId">Offline</a>
                            }
                            else if (!item.IsOnlineOrOffline && item.IsRequestedOrNot)
                            {
                                <div class="alert alert-warning text-center m-auto pt-1 pb-1">Pending</div>
                            }
                            else if (item.IsOnlineOrOffline && item.IsRequestedOrNot)
                            {
                                <div class="alert alert-success text-center m-auto pt-1 pb-1">Online</div>
                            }
                        </td>
                    }
                    else
                    {
                        <td></td>
                    }

                    <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                    <td>@Html.DisplayFor(modelItem => item.ServicePrice)</td>

                    @if (!ViewBag.isProvider)
                    {
                        <td>@Html.DisplayFor(modelItem => item.ServiceProviderName)</td>
                    }
                    else
                    {
                        <td></td>
                    }

                    @if (ViewBag.isProvider)
                    {
                        <td>
                            <div class="d-flex">
                                <a asp-action="Edit" asp-route-id="@item.ServiceId" class="btn btn-outline-primary me-2" title="Edit">
                                    <i class="fa-solid fa-pen-to-square"></i>
                                </a>
                                <a asp-action="Details" asp-route-id="@item.ServiceId" class="btn btn-outline-warning me-2" title="Details">
                                    <i class="fa-solid fa-circle-info"></i>
                                </a>
                                <a asp-action="GetImages" asp-route-id="@item.ServiceId" class="btn btn-outline-info me-2" title="View Images">
                                    <i class="fa-solid fa-image"></i>
                                </a>
                                <a asp-action="Prices" asp-route-id="@item.ServiceId" class="btn btn-outline-info me-2" title="View Prices">
                                    <i class="fa-solid fa-dollar-sign"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.ServiceId" class="btn btn-outline-danger" title="Delete">
                                    <i class="fa-solid fa-trash-can"></i>
                                </a>
                            </div>
                        </td>
                    }
                    else
                    {
                        <td></td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Include external JS files -->
<script src="~/js/servicesfilter.js"></script>
<script src="~/js/requestonlineservice.js"></script>

<!-- DataTable Initialization -->
<script>
    var js = jQuery.noConflict(true);
    js(document).ready(function () {
        var isProvider = '@ViewBag.isProvider' === 'True'; // Retrieve the isProvider value from ViewBag

        js('#myTable').DataTable({
            columns: [
                { title: 'Name' }, // Column 1: Name
                { title: 'Location' }, // Column 2: Location
                { title: 'Start Time' }, // Column 3: Start Time
                { title: 'End Time' }, // Column 4: End Time
                { title: 'Quantity' }, // Column 5: Quantity
                { title: 'Initial Payment %' }, // Column 6: Initial Payment Percentage
                { title: 'Status', visible: isProvider }, // Column 7: IsOnlineOrOffline (visible if isProvider)
                { title: 'Category' }, // Column 8: Category Name
                { title: 'Price' }, // Column 9: Service Price
                { title: 'Service Provider', visible: !isProvider }, // Column 10: ServiceProviderName (visible if not isProvider)
                { title: 'Actions' } // Column 11: Actions (Edit/Delete buttons)
            ]
        });
    });
</script>
