@model BookingServices.Data.Booking
@{
    ViewData["Title"] = "Booking Form";
    Layout = "~/Views/Shared/_LayoutProvider.cshtml";
    int myValue = TempData["serviceQuentity"] != null ? (int)TempData["serviceQuentity"] : 0;

}
<h1 class="text-center head-color">Booking</h1>
<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-body mt-2">
            @if (TempData["Message"] != null)
            {
                var messageType = TempData["MessageType"]?.ToString();
                <div id="alertMessage" class="alert @(messageType == "success" ? "alert-success" : "alert-danger")">
                    @TempData["Message"]
                </div>
            }
            <form asp-action="Booking" method="post" id="bookingForm">
                <!-- Service Name and Price in the first row -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="form-label">Service Name</label>
                            <input class="form-control" value="@ViewBag.ServiceName" readonly />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Price" class="form-label">Price</label>
                            <input id="PriceId" asp-for="Price" type="number" step="0.01" class="form-control" readonly value="@ViewBag.priceOfCurrentDay" />
                            <span id="PriceError" asp-validation-for="Price" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Customer Name, SSN Input, and Fetch Button in the second row -->
                <div class="row mb-3">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label">Customer Name</label>
                            <input id="CustomerName" class="form-control" value="@ViewBag.CustomerName" readonly />
                            <span id="customerError" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="CustomerId" class="form-label">SSN</label>
                            <input asp-for="CustomerId" id="CustomerId" name="CustomerId" class="form-control" />
                        </div>
                    </div>
                    <div class="col-md-4 mt-2">
                        <button type="button" id="fetchCustomer" class="btn btn-outline-primary mt-4">Fetch Customer</button>
                    </div>
                </div>

                <!-- Event Date, Start Time, End Time with arrow dropdown -->
                <div class="row mb-3">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="EventDate" class="form-label">Event Date</label>
                            <input asp-for="EventDate" type="date" class="form-control" id="eventDate"
                                   min="@DateTime.Now.ToString("yyyy-MM-dd")" max="@DateTime.Now.AddMonths(3).ToString("yyyy-MM-dd")" />
                            <span asp-validation-for="EventDate" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="StartTime" class="form-label">Start Time</label>
                            <select asp-for="StartTime" class="form-control" id="startTime" disabled></select>
                            <span asp-validation-for="StartTime" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="EndTime" class="form-label">End Time</label>
                            <select asp-for="EndTime" class="form-control" id="endTime" disabled></select>
                            <span asp-validation-for="EndTime" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Quantity, Payment Method, Payment Type -->
                <div class="row mb-3">
                    @if (myValue > 0)
                    {
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Quantity" class="form-label">Quantity</label>
                                <input id="QuantityId" asp-for="Quantity" class="form-control" placeholder="Available quantity: @ViewBag.AvailableQuantity" max="@ViewBag.AvailableQuantity" min="0" />
                                <span id="QuantityError" asp-validation-for="Quantity" class="text-danger"></span>
                            </div>
                        </div>
                    }
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="CashOrCashByHandOrInstallment" class="form-label">Payment Method</label>
                            <select asp-for="CashOrCashByHandOrInstallment" class="form-select" id="paymentType">
                                <option value="">-- Select Payment Type --</option>
                                <option value="CashByHand">Cash By Hand</option>
                                @* <option value="Cash">Cash</option> *@
                            </select>
                            <span asp-validation-for="CashOrCashByHandOrInstallment" class="text-danger"></span>
                        </div>
                    </div>
                    @* <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="PaymentIncomeId" class="form-label" id="paymentMethodLabel">Payment Method</label>
                            <select asp-for="PaymentIncomeId" class="form-select" id="paymentMethod">
                                <option value="">-- Select Payment Method --</option>
                                @foreach (var item in ViewBag.paymentMethod)
                                {
                                    @if (item.PaymentIncomeId == 1) continue;
                                    <option value="@item.PaymentIncomeId">@item.Name</option>
                                }
                            </select>
                            <span asp-validation-for="PaymentIncomeId" class="text-danger"></span>
                        </div>
                    </div> *@
                </div>

                <!-- Submit Booking Button on the left -->
                <div class="row mb-3">
                    <div class="col-md-12 text-start">
                        <button type="submit" class="btn btn-outline-primary">Submit Booking</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // document.getElementById('paymentType').addEventListener('change', function () {
        //     // var paymentMethod = document.getElementById('paymentMethod');
        //     var existingOption = document.querySelector("#paymentMethod option[value='CashByHand']");

        //     if (this.value === 'CashByHand') {
        //         if (!existingOption) {  // Check if the option doesn't already exist
        //             var newOption = document.createElement("option");
        //             newOption.value = "CashByHand";
        //             newOption.text = "Cash By Hand";
        //             paymentMethod.insertBefore(newOption, paymentMethod.firstChild);

        //             paymentMethod.style.display = 'none';
        //             document.getElementById('paymentMethodLabel').style.display = 'none';
        //         }
        //         paymentMethod.value = 'CashByHand';
        //         paymentMethod.disabled = true;
        //     } else {
        //         if (existingOption) {
        //             paymentMethod.removeChild(existingOption);  // Remove the 'CashByHand' option
        //         }
        //         paymentMethod.style.display = 'block';
        //         document.getElementById('paymentMethodLabel').style.display = 'block';

        //         paymentMethod.disabled = false;
        //     }
        // });


        document.getElementById('fetchCustomer').addEventListener('click', function () {
            var ssn = document.getElementById('CustomerId').value;
            fetch(`/Provider/GetCustomerBySSN?ssn=${ssn}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // console.log("su " + data);
                        document.getElementById('CustomerName').value = data.customerName;
                        document.getElementById('customerError').textContent = '';
                    } else {
                        // console.log("fail " + data);
                        document.getElementById('CustomerName').value = '';
                        document.getElementById('customerError').textContent = 'Customer not found';
                    }
                });
        });


        /******************************************************************************/
        document.getElementById('eventDate').addEventListener('change', function () {
            var serviceId = @ViewBag.ServiceId;
            var eventDate = this.value;

            fetch(`/Provider/GetAvailableTimes?serviceId=${serviceId}&eventDate=${eventDate}`)
                .then(response => response.json())
                .then(data => {
                    var startTimeDropdown = document.getElementById('startTime');
                    startTimeDropdown.innerHTML = '';
                   
                    // Add default "please select" option
                    var defaultOption = document.createElement('option');
                    defaultOption.value = '';
                    defaultOption.textContent = 'Please select a start time';
                    defaultOption.disabled = true;
                    defaultOption.selected = true;
                    startTimeDropdown.appendChild(defaultOption);
                    // if (data.success) console.log("Eslam her1");
                    // else console.log("Eslam her2");
                    

                    // Populate the dropdown with available times
                    data.forEach(time => {
                        var option = document.createElement('option');
                        var formattedTime = ("0" + time).slice(-2) + ":00";
                        option.value = formattedTime;
                        option.textContent = formattedTime;
                        startTimeDropdown.appendChild(option);
                    });
                    // console.log("Eslam her3");

                    startTimeDropdown.disabled = false;
                });

            if (@myValue > 0) {
                fetch(`/Provider/GetQuantityout?serviceId=${serviceId}&eventDate=${eventDate}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            //console.log("success " + data);
                            // Assigning values from the API response
                            // document.getElementById('PriceId').value = data.price;
                            document.getElementById('QuantityId').placeholder = "Available quantity: " + data.quantity;
                            // document.getElementById('PriceError').textContent = '';
                            document.getElementById('QuantityError').textContent = '';
                        } else {
                            //console.log("faild " + data);

                            // document.getElementById('PriceId').value = '';
                            document.getElementById('QuantityId').placeholder = "Available quantity: 0";
                            document.getElementById('QuantityId').Disabled;
                            // document.getElementById('PriceError').textContent = 'Not found Price for the selected date';
                            document.getElementById('QuantityError').textContent = 'There is no longer any quantity available.';
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
        });

        document.getElementById('startTime').addEventListener('change', function () {
            var serviceId = @ViewBag.ServiceId;
            var eventDate = document.getElementById('eventDate').value;
            var startTime = this.value;
            fetch(`/Provider/GetEndTimes?serviceId=${serviceId}&eventDate=${eventDate}&startTime=${startTime}`)
                .then(response => response.json())
                .then(data => {
                    var endTimeDropdown = document.getElementById('endTime');
                    endTimeDropdown.innerHTML = '';

                    // Add default "please select" option
                    var defaultOption = document.createElement('option');
                    defaultOption.value = '';
                    defaultOption.textContent = 'Please select an end time';
                    defaultOption.disabled = true;
                    defaultOption.selected = true;
                    endTimeDropdown.appendChild(defaultOption);

                    // Populate the dropdown with available times
                    data.forEach(time => {
                        var option = document.createElement('option');
                        var formattedTime = ("0" + time).slice(-2) + ":00";
                        option.value = formattedTime;
                        option.textContent = formattedTime;
                        endTimeDropdown.appendChild(option);
                    });

                    endTimeDropdown.disabled = false;
                });
        });
        /******************************************************************************/
    


        window.setTimeout(function() {
            var alertMessage = document.getElementById('alertMessage');
        if (alertMessage) {
            alertMessage.style.display = 'none';
            }
        }, 3000);
    </script>
}
