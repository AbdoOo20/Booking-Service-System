@model IEnumerable<BookingServices.Models.ProviderDataVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<link rel="stylesheet" href="~/css/StyleCustom/StyleList.css" />
<div class="container mt-5">
    <h1 class="text-center head-color">Providers</h1>


    <form id="searchForm" class="d-flex flex-wrap justify-content-center" onsubmit="return false;">
        @* <input id="searchInput" class="form-control me-sm-2 mb-3 w-100 w-md-auto" type="search" placeholder="Search Providers" oninput="filterProviders()" /> *@
    </form>
    <br />
</div>


<div class="table-responsive">
    <table class="table table-striped table-hover shadow-sm text-center" id="myTable">
        <thead class="thead-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.First().Name)</th>
                <th>@Html.DisplayNameFor(model => model.First().Email)</th>
                <th>@Html.DisplayNameFor(model => model.First().Phone)</th>
                <th>@Html.DisplayNameFor(model => model.First().NumberOfServices)</th>
                <th>@Html.DisplayNameFor(model => model.First().Rate)</th>
                <th class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                    <td>@Html.DisplayFor(modelItem => item.NumberOfServices)</td>
                    <td>@Html.DisplayFor(modelItem => item.Rate)</td>
                    <td class="text-center">
                        <a asp-action="Edit" asp-route-id="@item.ProviderId" class="btn btn-sm btn-outline-primary mx-1">
                            <i class="fa-solid fa-pen-to-square"></i>
                        </a>
                        @{
                            if (item.Isblocked ?? false)
                            {
                                <button id="blockButton-@item.ProviderId" class="btn btn-sm btn-outline-success mx-1" onclick="toggleBlock('@item.ProviderId')">
                                    <i class="fa-regular fa-circle-check"></i> UnBlock
                                </button>
                            }
                            else
                            {   
                                <button id="blockButton-@item.ProviderId" class="btn btn-sm btn-outline-danger mx-1" onclick="toggleBlock('@item.ProviderId')">
                                    <i class="fas fa-trash-alt"></i> Block
                                </button>
                            }
                        }
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@Html.AntiForgeryToken()

<script src="~/js/datatablesjs.js"></script>
<script>
    // Function to filter the table based on search input
   /* function filterProviders() {
        const searchInput = document.getElementById("searchInput").value.toLowerCase();
        const providerTable = document.getElementById("providerTable");
        const rows = providerTable.getElementsByTagName("tr");

        for (let i = 1; i < rows.length; i++) {  
            const cells = rows[i].getElementsByTagName("td");
            let found = false;

           
            for (let j = 0; j < cells.length; j++) {
                const cellText = cells[j].textContent.toLowerCase();
                if (cellText.includes(searchInput)) {
                    found = true;
                    break;
                }
            }
            rows[i].style.display = found ? "" : "none";  
        }
    }*/

    // Function to retrieve the Anti-Forgery token from the page
    function getAntiForgeryToken() {
        return $('input[name="__RequestVerificationToken"]').val();
    }

    // Function to toggle the block status of a provider
    function toggleBlock(providerId) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("ToggleBlock", "AdminServiceProvider")',
            data: {
                id: providerId,
                __RequestVerificationToken: getAntiForgeryToken()  
            },
            success: function (response) {
                if (response.success) {
                    var button = $("#blockButton-" + providerId);
                    if (response.isBlocked) {
                        button.html('<i class="fa-regular fa-circle-check"></i> UnBlock');
                        button.removeClass('btn-outline-danger').addClass('btn-outline-success');
                    } else {
                        button.html('<i class="fas fa-trash-alt"></i> Block');
                        button.removeClass('btn-outline-success').addClass('btn-outline-danger');
                    }
                } else {
                    alert(response.message);
                }
            },
            error: function () {
                alert("An error occurred while processing your request.");
            }
        });
    }
</script>
